Test scenarios for '3-say_my_name.py'
=================================

Utilize the function for printing something.
----------------------------------

>>> say_my_name = __import__('3-say_my_name').say_my_name

Cases for evaluation:

Case #1: test without any arguments
>>> say_my_name()
Traceback (most recent call last):
...
TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Case #2: testing null arguments
>>> say_my_name(None, None)
Traceback (most recent call last):
...
TypeError: first_name must be a string

Case #3: test when the first argument is Null
>>> say_my_name(None, "Ibrahim")
Traceback (most recent call last):
...
TypeError: first_name must be a string

Case #4: test the second argument for being null
>>> say_my_name("Al", None)
Traceback (most recent call last):
...
TypeError: last_name must be a string

Case #5: test that the first argument is a number
>>> say_my_name(12, "Ibrahim")
Traceback (most recent call last):
...
TypeError: first_name must be a string

Case #6: test for the second argument being a number
>>> say_my_name("Al", 98)
Traceback (most recent call last):
...
TypeError: last_name must be a string

Case #7: test whether both arguments are numbers
>>> say_my_name(98, 98)
Traceback (most recent call last):
...
TypeError: first_name must be a string

Case #8: Testing arguments as strings
>>> say_my_name("Al", "Ibrahim")
My name is Al Ibrahim
