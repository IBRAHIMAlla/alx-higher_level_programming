'0-add_integer.py'
=================================


>>> add_integer = __import__('0-add_integer').add_integer


Case #1:
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

Case #2:
>>> add_integer(None, 1)
Traceback (most recent call last):
...
TypeError: a must be an integer

Case #3:
>>> add_integer(1, None)
Traceback (most recent call last):
...
TypeError: b must be an integer

Case #4:
>>> add_integer(None, None)
Traceback (most recent call last):
...
TypeError: a must be an integer

Case #5:
>>> add_integer(1, 1, 1)
Traceback (most recent call last):
...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Case #6:
>>> add_integer("Holberton", 98)
Traceback (most recent call last):
...
TypeError: a must be an integer

Case #7: test 'b' such as string (int(a)).
>>> add_integer(98, "Holberton")
Traceback (most recent call last):
...
TypeError: b must be an integer

Case #8:
>>> add_integer("98", "Holberton")
Traceback (most recent call last):
...
TypeError: a must be an integer

Case #9:
>>> add_integer(2, -2)
0

Case #10:
>>> add_integer(2)
100

Case #11:
>>> add_integer(20.5, 0.5)
20

Case #12:
>>> add_integer(7+7j, 7)
Traceback (most recent call last):
...
TypeError: a must be an integer

Case #13:
>>> add_integer(float('inf'), 1)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
